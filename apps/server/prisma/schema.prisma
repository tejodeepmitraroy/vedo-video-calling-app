// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String @id @unique
  first_name String
  last_name  String
  email      String @unique
  image_url  String

  room               Room[]
  participantsOnRoom ParticipantsOnRoom[]
  friends            FriendShip[]         @relation("UserFriends")
  friendOf           FriendShip[]         @relation("UserFriendOf")

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Room {
  id           String               @id @unique @default(uuid())
  type         RoomType             @default(INSTANT)
  roomId       String               @unique
  url          String               @unique
  title        String
  description  String?
  startTime    DateTime?
  endTime      DateTime?
  createdById  String
  createdBy    User                 @relation(fields: [createdById], references: [id], onDelete: Cascade)
  participants ParticipantsOnRoom[]
  createdAt    DateTime?            @default(now())
  updatedAt    DateTime?            @updatedAt
}

model ParticipantsOnRoom {
  user_id   String
  room_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  room      Room      @relation(fields: [room_id], references: [roomId], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@id([user_id, room_id])
}

model FriendShip {
  user_id   String 
  friend_id String 
  user      User      @relation("UserFriends", fields: [user_id], references: [id], onDelete: Cascade)
  friend    User      @relation("UserFriendOf", fields: [friend_id], references: [id], onDelete: Cascade)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  @@id([user_id, friend_id])
}

enum RoomType {
  INSTANT
  SCHEDULE
}
